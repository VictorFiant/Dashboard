{"ast":null,"code":"var _jsxFileName = \"/Users/victorfiant/Desktop/react-test/client/src/Components/Dashboard/Dashboard.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Paper, TableContainer, Table, TableHead, TableRow, TableCell, TableBody } from \"@material-ui/core\";\nimport useStyle from \"./styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n;\nconst columns = [{\n  id: 'cve',\n  label: 'CVE ID',\n  minWidth: 170\n}, {\n  id: 'date',\n  label: 'PUBLISHED DATE',\n  minWidth: 10\n}, {\n  id: 'severity',\n  label: 'SEVERITY',\n  minWidth: 100\n}, {\n  id: 'desc',\n  label: 'DESCRIPTION',\n  minWidth: 100\n}];\n\nconst Dashboard = () => {\n  _s();\n\n  const classes = useStyle();\n  const [data, setData] = useState([]);\n  const item = {\n    cve: {\n      CVE_data_meta: {\n        ID: 'number'\n      },\n      description: {\n        description_data: {\n          value: \" string\"\n        }\n      }\n    },\n    impact: {\n      severity: \"string\"\n    },\n    publishedDate: \"number\"\n  };\n  useEffect(() => {\n    fetch('http://localhost:5000/data').then(response => response.json()).then(resData => setData(resData.data));\n  }, []); // console.log(data)\n\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(TableContainer, {\n      className: classes.container,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        stickyHeader: true,\n        \"aria-label\": \"sticky table\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: columns.map(column => /*#__PURE__*/_jsxDEV(TableCell, {\n              align: column.align,\n              style: {\n                minWidth: column.minWidth\n              },\n              children: column.label\n            }, column.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 15\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: data.map(item => /*#__PURE__*/_jsxDEV(TableCell, {\n              children: item.cve.CVE_data_meta.ID\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 16\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Dashboard, \"I9wQ0XOZCyPWCNPWpjeDMqI5AhQ=\", false, function () {\n  return [useStyle];\n});\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/Users/victorfiant/Desktop/react-test/client/src/Components/Dashboard/Dashboard.tsx"],"names":["React","useEffect","useState","Paper","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","useStyle","columns","id","label","minWidth","Dashboard","classes","data","setData","item","cve","CVE_data_meta","ID","description","description_data","value","impact","severity","publishedDate","fetch","then","response","json","resData","root","container","map","column","align"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Paper,TableContainer,Table,TableHead,TableRow,TableCell,TableBody, TablePagination } from \"@material-ui/core\";\n\nimport useStyle from \"./styles\";\n\ninterface Column {\n  id: 'cve' | 'date' | 'severity' | 'desc' ,\n  label: string,\n  minWidth?: number,\n  align?: 'right',\n};\nconst columns: Column[] = [\n  { id: 'cve', label: 'CVE ID', minWidth: 170 },\n  { id: 'date', label: 'PUBLISHED DATE', minWidth: 10 },\n  { id: 'severity', label: 'SEVERITY', minWidth: 100 },\n  { id: 'desc', label: 'DESCRIPTION', minWidth: 100 },\n]\n\n\n\n  const Dashboard = () => {\n  const classes = useStyle();\n  const [ data, setData ] = useState <any[]>([]);\n  \n  const item = { cve: { CVE_data_meta: { ID: 'number' }, description: { description_data: { value: \" string\" }}},  impact: { severity: \"string\" }, publishedDate: \"number\"} \n\n  useEffect( () => {\n    fetch('http://localhost:5000/data')\n    .then(response =>  response.json())\n    .then (resData => setData(resData.data)) \n  \n  },[]);\n\n   \n    \n  \n // console.log(data)\n  return (\n    <Paper className={classes.root}>\n      <TableContainer className={classes.container}>\n        <Table stickyHeader aria-label=\"sticky table\">\n          <TableHead>\n            <TableRow>\n            {columns.map((column) => (\n              <TableCell key={column.id} align={column.align} style={{ minWidth: column.minWidth }} >\n                {column.label}\n              </TableCell>\n            ))}\n          </TableRow>\n          </TableHead>\n          <TableBody>\n            <TableRow>\n            {data.map(item =>\n               <TableCell >\n                  {item.cve.CVE_data_meta.ID}         \n               </TableCell>\n            )}\n            </TableRow>\n         \n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Paper>\n  );\n};\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}