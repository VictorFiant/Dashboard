{"ast":null,"code":"var _jsxFileName = \"/Users/victorfiant/Desktop/react-test/client/src/Components/Dashboard/Dashboard.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Paper, TableContainer, Table, TableHead, TableRow, TableCell, TableBody, Box } from \"@material-ui/core\";\nimport useStyle from \"./styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n;\nconst columns = [{\n  id: 'cve',\n  label: 'CVE ID',\n  minWidth: 170\n}, {\n  id: 'date',\n  label: 'PUBLISHED DATE',\n  minWidth: 170\n}, {\n  id: 'severity',\n  label: 'SEVERITY',\n  minWidth: 170\n}, {\n  id: 'desc',\n  label: 'DESCRIPTION',\n  minWidth: 170\n}];\n\nconst Dashboard = () => {\n  _s();\n\n  const classes = useStyle();\n  const [data, setData] = useState([]); //const item = { cve: { CVE_data_meta: { ID: \"number\" }, description: { description_data: { value: \"string\" }}},  severity: \"string\" , publishedDate: \"number\"} \n\n  useEffect(() => {\n    fetch('http://localhost:5000/data').then(response => response.json()).then(resData => setData(resData.data));\n  }, []);\n  console.log(data); // console.log(data)\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    className: classes.box,\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.root,\n      children: [/*#__PURE__*/_jsxDEV(TableContainer, {\n        className: classes.container,\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          stickyHeader: true,\n          \"aria-label\": \"sticky table\",\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: columns.map(column => /*#__PURE__*/_jsxDEV(TableCell, {\n                align: column.align,\n                style: {\n                  minWidth: column.minWidth\n                },\n                children: column.label\n              }, column.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 17\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: data.map(item => /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                align: item.align,\n                style: {\n                  minWidth: item.minWidth\n                },\n                children: [\" \", item.cve.CVE_data_meta.ID, \" \"]\n              }, item.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: item.align,\n                style: {\n                  minWidth: item.minWidth\n                },\n                children: [\" \", item.publishedDate, \" \"]\n              }, item.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: item.align,\n                style: {\n                  minWidth: item.minWidth\n                },\n                children: [\" \", item.impact.severity, \" \"]\n              }, item.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: item.align,\n                style: {\n                  minWidth: item.minWidth\n                },\n                children: [\" \", item.cve.description.description_data.value, \" \"]\n              }, item.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 15\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 6\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Dashboard, \"I9wQ0XOZCyPWCNPWpjeDMqI5AhQ=\", false, function () {\n  return [useStyle];\n});\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/Users/victorfiant/Desktop/react-test/client/src/Components/Dashboard/Dashboard.tsx"],"names":["React","useEffect","useState","Paper","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","Box","useStyle","columns","id","label","minWidth","Dashboard","classes","data","setData","fetch","then","response","json","resData","console","log","box","root","container","map","column","align","item","cve","CVE_data_meta","ID","publishedDate","impact","severity","description","description_data","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Paper,TableContainer,Table,TableHead,TableRow,TableCell,TableBody, Box } from \"@material-ui/core\";\nimport { Chart, LineSeries, ScatterSeries } from '@devexpress/dx-react-chart-material-ui';\nimport useStyle from \"./styles\";\n\ninterface Column {\n  id: 'cve' | 'date' | 'severity' | 'desc' ,\n  label: string,\n  minWidth?: number,\n  align?: 'left',\n  \n};\nconst columns: Column[] = [\n  { id: 'cve', label: 'CVE ID', minWidth: 170 },\n  { id: 'date', label: 'PUBLISHED DATE', minWidth: 170 },\n  { id: 'severity', label: 'SEVERITY', minWidth: 170 },\n  { id: 'desc', label: 'DESCRIPTION', minWidth: 170 },\n]\n\n  const Dashboard = () => {\n  const classes = useStyle();\n  const [ data, setData ] = useState <any[]>([]);\n  \n  //const item = { cve: { CVE_data_meta: { ID: \"number\" }, description: { description_data: { value: \"string\" }}},  severity: \"string\" , publishedDate: \"number\"} \n\n  useEffect( () => {\n    fetch('http://localhost:5000/data')\n    .then(response =>  response.json())\n    .then (resData => setData(resData.data)) \n  \n  },[]);\n\n   \n    console.log(data)\n  \n // console.log(data)\n  return (\n    <Box className={classes.box}>\n     <Paper className={classes.root}>\n        <TableContainer className={classes.container}>\n          <Table stickyHeader aria-label=\"sticky table\">\n            <TableHead>\n              <TableRow>\n              {columns.map((column) => (\n                <TableCell key={column.id} align={column.align} style={{ minWidth: column.minWidth }} >\n                  {column.label}\n                </TableCell>\n               ))}\n             </TableRow>\n            </TableHead>\n            <TableBody>\n            {data.map(item =>\n              <TableRow>\n                <TableCell key={item.id} align={item.align} style={{ minWidth: item.minWidth }}> {item.cve.CVE_data_meta.ID} </TableCell>\n                <TableCell key={item.id} align={item.align} style={{ minWidth: item.minWidth }} > {item.publishedDate} </TableCell>\n                <TableCell key={item.id} align={item.align} style={{ minWidth: item.minWidth }} > {item.impact.severity} </TableCell>\n                <TableCell key={item.id} align={item.align} style={{ minWidth: item.minWidth }} > {item.cve.description.description_data.value} </TableCell>\n              </TableRow>\n            )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <Grid>\n\n        </Grid>\n        \n        </Paper>\n    </Box>\n    \n  );\n};\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}