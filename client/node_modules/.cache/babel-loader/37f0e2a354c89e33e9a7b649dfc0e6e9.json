{"ast":null,"code":"var _jsxFileName = \"/Users/victorfiant/Desktop/react-test/client/src/Components/Dashboard/Dashboard.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Paper, TableContainer, Table, TableHead, TableRow, TableCell, TableBody } from \"@material-ui/core\";\nimport useStyle from \"./styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  id: \"cve\",\n  label: \"CVE ID\",\n  minWidth: 170\n}, {\n  id: \"date\",\n  label: \"PUBLISHED DATE\",\n  minWidth: 170\n}, {\n  id: \"severity\",\n  label: \"SEVERITY\",\n  minWidth: 170\n}, {\n  id: \"desc\",\n  label: \"DESCRIPTION\",\n  minWidth: 170\n}];\n\nconst Dashboard = () => {\n  _s();\n\n  const classes = useStyle();\n  const [data, setData] = useState([]); //const item = { cve: { CVE_data_meta: { ID: \"number\" }, description: { description_data: { value: \"string\" }}},  severity: \"string\" , publishedDate: \"number\"}\n\n  useEffect(() => {\n    fetch(\"http://localhost:5000/data\").then(response => response.json()).then(resData => setData(resData.data));\n  }, []);\n  console.log(data); // console.log(data)\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.root,\n      children: /*#__PURE__*/_jsxDEV(TableContainer, {\n        className: classes.container,\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          stickyHeader: true,\n          \"aria-label\": \"sticky table\",\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: columns.map(column => /*#__PURE__*/_jsxDEV(TableCell, {\n                align: column.align,\n                style: {\n                  minWidth: column.minWidth\n                },\n                children: column.label\n              }, column.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: data.map(item => /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                align: item.align,\n                style: {\n                  minWidth: item.minWidth\n                },\n                children: [\" \", item.cve.CVE_data_meta.ID, \" \"]\n              }, item.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: item.align,\n                style: {\n                  minWidth: item.minWidth\n                },\n                children: [\" \", item.publishedDate, \" \"]\n              }, item.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: item.align,\n                style: {\n                  minWidth: item.minWidth\n                },\n                children: [\" \", item.impact.severity, \" \"]\n              }, item.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: item.align,\n                style: {\n                  minWidth: item.minWidth\n                },\n                children: [\" \", item.cve.description.description_data.value, \" \"]\n              }, item.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Dashboard, \"rPVJhFeUhClZfe8vMVb1trexDec=\", false, function () {\n  return [useStyle];\n});\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/Users/victorfiant/Desktop/react-test/client/src/Components/Dashboard/Dashboard.tsx"],"names":["React","useEffect","useState","Paper","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","useStyle","columns","id","label","minWidth","Dashboard","classes","data","setData","fetch","then","response","json","resData","console","log","root","container","map","column","align","item","cve","CVE_data_meta","ID","publishedDate","impact","severity","description","description_data","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SACEC,KADF,EAEEC,cAFF,EAGEC,KAHF,EAIEC,SAJF,EAKEC,QALF,EAMEC,SANF,EAOEC,SAPF,QAQO,mBARP;AAUA,OAAOC,QAAP,MAAqB,UAArB;;AASA,MAAMC,OAAiB,GAAG,CACxB;AAAEC,EAAAA,EAAE,EAAE,KAAN;AAAaC,EAAAA,KAAK,EAAE,QAApB;AAA8BC,EAAAA,QAAQ,EAAE;AAAxC,CADwB,EAExB;AAAEF,EAAAA,EAAE,EAAE,MAAN;AAAcC,EAAAA,KAAK,EAAE,gBAArB;AAAuCC,EAAAA,QAAQ,EAAE;AAAjD,CAFwB,EAGxB;AAAEF,EAAAA,EAAE,EAAE,UAAN;AAAkBC,EAAAA,KAAK,EAAE,UAAzB;AAAqCC,EAAAA,QAAQ,EAAE;AAA/C,CAHwB,EAIxB;AAAEF,EAAAA,EAAE,EAAE,MAAN;AAAcC,EAAAA,KAAK,EAAE,aAArB;AAAoCC,EAAAA,QAAQ,EAAE;AAA9C,CAJwB,CAA1B;;AAOA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACtB,QAAMC,OAAO,GAAGN,QAAQ,EAAxB;AACA,QAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBhB,QAAQ,CAAQ,EAAR,CAAhC,CAFsB,CAItB;;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdkB,IAAAA,KAAK,CAAC,4BAAD,CAAL,CACGC,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADtB,EAEGF,IAFH,CAESG,OAAD,IAAaL,OAAO,CAACK,OAAO,CAACN,IAAT,CAF5B;AAGD,GAJQ,EAIN,EAJM,CAAT;AAMAO,EAAAA,OAAO,CAACC,GAAR,CAAYR,IAAZ,EAZsB,CActB;;AACA,sBACE,QAAC,GAAD;AAAA,2BACE,QAAC,KAAD;AAAO,MAAA,SAAS,EAAED,OAAO,CAACU,IAA1B;AAAA,6BACE,QAAC,cAAD;AAAgB,QAAA,SAAS,EAAEV,OAAO,CAACW,SAAnC;AAAA,+BACE,QAAC,KAAD;AAAO,UAAA,YAAY,MAAnB;AAAoB,wBAAW,cAA/B;AAAA,kCACE,QAAC,SAAD;AAAA,mCACE,QAAC,QAAD;AAAA,wBACGhB,OAAO,CAACiB,GAAR,CAAaC,MAAD,iBACX,QAAC,SAAD;AAEE,gBAAA,KAAK,EAAEA,MAAM,CAACC,KAFhB;AAGE,gBAAA,KAAK,EAAE;AAAEhB,kBAAAA,QAAQ,EAAEe,MAAM,CAACf;AAAnB,iBAHT;AAAA,0BAKGe,MAAM,CAAChB;AALV,iBACOgB,MAAM,CAACjB,EADd;AAAA;AAAA;AAAA;AAAA,sBADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAcE,QAAC,SAAD;AAAA,sBACGK,IAAI,CAACW,GAAL,CAAUG,IAAD,iBACR,QAAC,QAAD;AAAA,sCACE,QAAC,SAAD;AAEE,gBAAA,KAAK,EAAEA,IAAI,CAACD,KAFd;AAGE,gBAAA,KAAK,EAAE;AAAEhB,kBAAAA,QAAQ,EAAEiB,IAAI,CAACjB;AAAjB,iBAHT;AAAA,2BAKG,GALH,EAMGiB,IAAI,CAACC,GAAL,CAASC,aAAT,CAAuBC,EAN1B,EAM8B,GAN9B;AAAA,iBACOH,IAAI,CAACnB,EADZ;AAAA;AAAA;AAAA;AAAA,sBADF,eASE,QAAC,SAAD;AAEE,gBAAA,KAAK,EAAEmB,IAAI,CAACD,KAFd;AAGE,gBAAA,KAAK,EAAE;AAAEhB,kBAAAA,QAAQ,EAAEiB,IAAI,CAACjB;AAAjB,iBAHT;AAAA,2BAKG,GALH,EAMGiB,IAAI,CAACI,aANR,EAMuB,GANvB;AAAA,iBACOJ,IAAI,CAACnB,EADZ;AAAA;AAAA;AAAA;AAAA,sBATF,eAiBE,QAAC,SAAD;AAEE,gBAAA,KAAK,EAAEmB,IAAI,CAACD,KAFd;AAGE,gBAAA,KAAK,EAAE;AAAEhB,kBAAAA,QAAQ,EAAEiB,IAAI,CAACjB;AAAjB,iBAHT;AAAA,2BAKG,GALH,EAMGiB,IAAI,CAACK,MAAL,CAAYC,QANf,EAMyB,GANzB;AAAA,iBACON,IAAI,CAACnB,EADZ;AAAA;AAAA;AAAA;AAAA,sBAjBF,eAyBE,QAAC,SAAD;AAEE,gBAAA,KAAK,EAAEmB,IAAI,CAACD,KAFd;AAGE,gBAAA,KAAK,EAAE;AAAEhB,kBAAAA,QAAQ,EAAEiB,IAAI,CAACjB;AAAjB,iBAHT;AAAA,2BAKG,GALH,EAMGiB,IAAI,CAACC,GAAL,CAASM,WAAT,CAAqBC,gBAArB,CAAsCC,KANzC,EAMgD,GANhD;AAAA,iBACOT,IAAI,CAACnB,EADZ;AAAA;AAAA;AAAA;AAAA,sBAzBF;AAAA;AAAA;AAAA;AAAA;AAAA,oBADD;AADH;AAAA;AAAA;AAAA;AAAA,kBAdF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA6DD,CA5ED;;GAAMG,S;UACYL,Q;;;KADZK,S;AA8EN,eAAeA,SAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {\n  Paper,\n  TableContainer,\n  Table,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableBody,\n} from \"@material-ui/core\";\n\nimport useStyle from \"./styles\";\n\ninterface Column {\n  id: \"cve\" | \"date\" | \"severity\" | \"desc\";\n  label: string;\n  minWidth?: number;\n  align?: \"left\";\n  format?: (value: number) => string;\n}\nconst columns: Column[] = [\n  { id: \"cve\", label: \"CVE ID\", minWidth: 170 },\n  { id: \"date\", label: \"PUBLISHED DATE\", minWidth: 170 },\n  { id: \"severity\", label: \"SEVERITY\", minWidth: 170 },\n  { id: \"desc\", label: \"DESCRIPTION\", minWidth: 170 },\n];\n\nconst Dashboard = () => {\n  const classes = useStyle();\n  const [data, setData] = useState<any[]>([]);\n\n  //const item = { cve: { CVE_data_meta: { ID: \"number\" }, description: { description_data: { value: \"string\" }}},  severity: \"string\" , publishedDate: \"number\"}\n\n  useEffect(() => {\n    fetch(\"http://localhost:5000/data\")\n      .then((response) => response.json())\n      .then((resData) => setData(resData.data));\n  }, []);\n\n  console.log(data);\n\n  // console.log(data)\n  return (\n    <Box>\n      <Paper className={classes.root}>\n        <TableContainer className={classes.container}>\n          <Table stickyHeader aria-label=\"sticky table\">\n            <TableHead>\n              <TableRow>\n                {columns.map((column) => (\n                  <TableCell\n                    key={column.id}\n                    align={column.align}\n                    style={{ minWidth: column.minWidth }}\n                  >\n                    {column.label}\n                  </TableCell>\n                ))}\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {data.map((item) => (\n                <TableRow>\n                  <TableCell\n                    key={item.id}\n                    align={item.align}\n                    style={{ minWidth: item.minWidth }}\n                  >\n                    {\" \"}\n                    {item.cve.CVE_data_meta.ID}{\" \"}\n                  </TableCell>\n                  <TableCell\n                    key={item.id}\n                    align={item.align}\n                    style={{ minWidth: item.minWidth }}\n                  >\n                    {\" \"}\n                    {item.publishedDate}{\" \"}\n                  </TableCell>\n                  <TableCell\n                    key={item.id}\n                    align={item.align}\n                    style={{ minWidth: item.minWidth }}\n                  >\n                    {\" \"}\n                    {item.impact.severity}{\" \"}\n                  </TableCell>\n                  <TableCell\n                    key={item.id}\n                    align={item.align}\n                    style={{ minWidth: item.minWidth }}\n                  >\n                    {\" \"}\n                    {item.cve.description.description_data.value}{\" \"}\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Paper>\n    </Box>\n  );\n};\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}